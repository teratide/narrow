var searchIndex = JSON.parse('{\
"narrow":{"doc":"narrow","t":[8,16,16,16,24,8,8,8,6,3,3,3,3,16,16,3,3,3,3,8,3,3,3,6,6,6,6,6,6,6,6,6,6,8,3,3,3,3,8,16,8,3,3,3,3,8,6,6,6,6,3,8,8,6,3,16,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Array","Array","Array","Array","Array","ArrayData","ArrayIndex","ArrayType","BinaryArray","Bitmap","BitmapIter","BooleanArray","Buffer","Child","Child","DenseUnionArray","DenseUnionIter","DictionaryArray","DictionaryArrayIter","DictionaryIndexValue","FixedSizeListArray","FixedSizeListArrayIter","FixedSizePrimitiveArray","Float32Array","Float64Array","Int16Array","Int32Array","Int64Array","Int8Array","LargeBinaryArray","LargeListArray","LargeUtf8Array","ListArray","NestedArray","NullArray","Nullable","Offset","OffsetIter","OffsetValue","Output","Primitive","SparseUnionArray","SparseUnionIter","StringArray","StructArray","StructArrayType","Uint16Array","Uint32Array","Uint64Array","Uint8Array","UnionArray","UnionArrayIndex","UnionArrayType","Utf8Array","Validity","Validity","VariableSizeBinaryArray","VariableSizeBinaryArrayIter","VariableSizeListArray","VariableSizeListArrayIter","all_null","all_null","all_null","all_valid","all_valid","all_valid","any_null","any_null","any_valid","any_valid","any_valid","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child","child","child","child","child","child","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","data","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","drop","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_null","is_null","is_null","is_null","is_null","is_null","is_null","is_null","is_null","is_null","is_null","is_null","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","len","len","len","len","len","len","len","len","len","len","len","len","len","ne","ne","ne","ne","ne","next","next","next","next","next","next","next","next","next","next","next","next","next","null_count","null_count","null_count","null_count","null_count","null_count","null_count","null_count","null_count","null_count","null_count","null_count","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_count","valid_count","valid_count","valid_count","valid_count","valid_count","valid_count","valid_count","valid_count","valid_count","valid_count","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","validity","with_len"],"q":["narrowd":["A sequence of values with known length all having the same …","The type storing the struct of arrays.","","Array type used for this type.","Derive macro for the Array trait.","Types storing array data.","Index trait to get owned values of an array.","Types for which sequences of values can be stored in …","Array with variable sized binary data. Uses i32 offsets.","An immutable collection of bits.","","Array with boolean values.","A contiguous immutable memory buffer for data.","","","Dense union array for enum type <code>T</code> with <code>N</code> variants.","Iterator over elements of a dense union array.","Array where values are encoded using a dictionary.","Iterator over elements of a dictionary encoded array.","Types representing dictionary index values.","Array with fixed-size lists of other array types.","Iterator over elements of an array with fixed-sized lists …","Array with primitive values.","Array with f32 values.","Array with f64 values.","Array with i16 values.","Array with i32 values.","Array with i64 values.","Array with i8 values.","Array with variable sized binary data. Uses i64 offsets.","Array with variable-sized lists of other array types. Uses …","Array with UTF-8 strings. Uses i64 offsets.","Array with variable-sized lists of other array types. Uses …","Types storing nested sequences of values.","A sequence of nulls.","Wrapper for nullable data.","Wrapper for offset values of variable sized arrays.","Iterator over offsets values of variable sized arrays.","Types representing offset values.","","Subtrait for primitive types.","Sparse union array for enum type <code>T</code>.","Iterator over elements of a sparse union array.","Array with variable sized string (UTF-8) data.","Array with structs that have fields of other array types.","Struct types that can be stored in arrays.","Array with u16 values.","Array with u32 values.","Array with u64 values.","Array with u8 values.","Array with an ordered sequence of variants of <code>T</code>. <code>D</code> encodes …","Index trait for union arrays.","Union types that can be stored in arrays.","Array with UTF-8 strings. Uses i32 offsets.","Validity wrapper for nullable and non-nullable data.","Validity of the array.","Array with variable-sized binary data.","Iterator over elements of an array with variable-sized …","Array with variable-sized lists of other arrays.","Iterator over elements of an array with variable-sized …","Returns <code>true</code> if all the elements in the array are null.","Returns <code>true</code> if all the elements in the array are null.","","Returns <code>true</code> if all the elements in the array are valid.","Returns <code>true</code> if all the elements in the array are valid.","","Returns <code>true</code> if the array contains at least one null …","Returns <code>true</code> if the array contains at least one null …","Returns <code>true</code> if the array contains at least one valid …","Returns <code>true</code> if the array contains at least one valid …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the child array.","","","","","","","","","","","","","","","","","","Returns a reference to the data of the Nullable.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the array contains no elements.","Returns <code>true</code> if the array contains no elements.","Returns <code>true</code> if the number of elements is <code>0</code>.","Returns <code>true</code> if the number of elements is <code>0</code>.","Returns <code>true</code> if the array contains no elements.","","","","","Returns <code>true</code> if the element at position <code>index</code> is null.","Returns <code>true</code> if the element at position <code>index</code> is null.","Returns <code>true</code> if the element at position <code>index</code> is null.","Returns <code>true</code> if the element at position <code>index</code> is null.","","","","","","","","","","Returns <code>true</code> if the element at position <code>index</code> is valid.","Returns <code>true</code> if the element at position <code>index</code> is valid.","","","","","","Returns the number of elements.","","","","Returns the number of elements in the array, also referred …","Returns the number of elements in the array, also referred …","","","","","","Returns the number of elements in the array, also referred …","","","","","","","","","","","","","","","","","","","","","","","Returns the number of null elements.","Returns the number of null elements.","Returns the number of null elements.","Returns the number of null elements.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of valid elements.","","","","Returns the number of valid elements.","Returns the number of valid elements.","","","","","","Returns a reference to the Validity of the array.","","","","","Returns a reference to the validity Bitmap of the Nullable.","","","","","","","","","Returns a new NullArray with the given length."],"i":[0,1,2,3,0,0,0,0,0,0,0,0,0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,6,6,7,6,6,7,6,6,6,6,7,8,8,9,8,8,10,11,12,13,14,15,16,17,18,19,20,21,9,22,23,24,25,26,27,28,29,30,7,31,8,10,11,12,13,14,15,16,17,18,19,20,21,9,22,23,24,25,26,27,28,29,30,7,31,4,17,19,29,30,31,8,9,22,23,24,7,8,9,22,23,24,7,22,27,8,9,22,8,15,16,23,23,24,24,25,25,26,26,28,8,8,9,22,23,26,7,8,15,16,17,19,9,22,23,24,25,26,27,28,29,30,7,31,8,10,11,12,13,14,15,16,17,18,19,20,21,9,22,23,24,25,26,27,28,29,30,7,31,8,15,15,16,17,19,9,22,23,23,24,24,25,25,25,25,25,26,26,27,27,28,28,29,29,30,30,7,31,31,32,5,9,9,22,23,25,25,26,26,27,27,28,28,29,7,8,10,11,12,13,14,15,16,17,18,19,20,21,9,22,23,24,25,26,27,28,29,30,7,31,10,11,13,14,18,20,6,6,33,33,7,7,8,17,19,6,6,33,33,9,22,23,24,7,33,8,17,19,6,6,9,22,23,24,7,33,8,17,19,6,6,9,22,23,24,30,7,7,9,22,23,26,7,10,11,11,12,12,13,13,14,14,18,20,21,21,8,17,19,6,6,33,33,9,22,23,24,7,10,11,11,12,12,13,13,8,9,22,23,24,7,8,10,11,12,13,14,15,16,17,18,19,20,21,9,22,23,24,25,26,27,28,29,30,7,31,8,10,11,12,13,14,15,16,17,18,19,20,21,9,22,23,24,25,26,27,28,29,30,7,31,8,10,11,12,13,14,15,16,17,18,19,20,21,9,22,23,24,25,26,27,28,29,30,7,31,33,8,17,19,6,6,9,22,23,24,7,6,15,16,17,19,22,25,26,27,28,29,30,7,31,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["buffer",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bitmap",3]],[[],["nullable",3]],[[],["validity",3]],[[],["offset",3]],[[],["nullarray",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["buffer",3]],[[]],[[],["bitmap",3]],[[],["nullable",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["bitmap",3]],["bool",15]],[[["nullable",3]],["bool",15]],[[["validity",3]],["bool",15]],[[["booleanarray",3]],["bool",15]],[[["nullarray",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i8",15],["i32",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[["usize",15]],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["bitmap",3]],["bool",15]],[[["nullable",3]],["bool",15]],[[["validity",3]],["bool",15]],[[["booleanarray",3]],["bool",15]],[[["nullarray",3]],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[],["bitmap",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]]],"p":[[8,"StructArrayType"],[8,"UnionArrayType"],[8,"ArrayType"],[8,"NestedArray"],[8,"ArrayIndex"],[8,"Array"],[3,"NullArray"],[3,"Buffer"],[3,"Bitmap"],[3,"BitmapIter"],[3,"OffsetIter"],[3,"VariableSizeBinaryArrayIter"],[3,"VariableSizeListArrayIter"],[3,"FixedSizeListArrayIter"],[3,"StructArray"],[3,"UnionArray"],[3,"SparseUnionArray"],[3,"SparseUnionIter"],[3,"DenseUnionArray"],[3,"DenseUnionIter"],[3,"DictionaryArrayIter"],[3,"Nullable"],[3,"Validity"],[3,"Offset"],[3,"FixedSizePrimitiveArray"],[3,"BooleanArray"],[3,"VariableSizeBinaryArray"],[3,"StringArray"],[3,"VariableSizeListArray"],[3,"FixedSizeListArray"],[3,"DictionaryArray"],[8,"UnionArrayIndex"],[8,"ArrayData"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};